Two-dimensional arrays can be thought of rectangular display of elements with rows and columns. Consider the following example int x[3][3];

The arrangement of array elements shown in Figure 7.10 is only for the sake of understanding. Actually, the elements are stored in the contiguous memory locations. 
The two-dimensional array is a collection of two one-dimensional arrays. The meaning of the first argument is in x[3][3] means number of rows, i.e. the number of 
one-dimensional array and the second argument indicate the number of elements. The x[0][0] means the first element of the first row and column. In one row, the 
row number remains the same and the column number changes. The number of rows and columns is called the range of an array. A two-dimensional array clearly shows 
the difference between logical assumption and physical representation of the data. The computer memory is linear and any type of an array may be one, two or 
multi-dimensional, it is stored in the continuous memory location

 SAMPLE CODE
-------------

#include<stdio.h>

#include<conio.h>

void main()

{

unsigned int *p,num[2][2]={4,5,6,7},j;

clrscr();

p=&num[0][0];

for(j=0;j<4;j++)

printf(“ %d %u\n”,*(p+j),(p+j));

getch();

}


DO YOU WANT TO RUN THIS CODE ?
PRESS 1 FOR YES OR 0 FOR NO...
